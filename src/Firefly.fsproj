<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net9.0</TargetFramework>
    <PackAsTool>true</PackAsTool>
    <ToolCommandName>firefly</ToolCommandName>
    <PackageOutputPath>./nupkg</PackageOutputPath>
    <Version>0.2.007</Version>
    <Description>F# to Native Compiler with Zero-Allocation Guarantees using XParsec</Description>
    <Authors>Speakez LLC</Authors>
    <PackageTags>fsharp;compiler;native;zero-allocation;xparsec;mlir;llvm</PackageTags>
    <RepositoryType>git</RepositoryType>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
  </PropertyGroup>

  <ItemGroup>
      <!-- Core Infrastructure -->
      <Compile Include="Core/Utilities/IntermediateWriter.fs" />
      <Compile Include="Core/XParsec/Foundation.fs" />
      
      <!-- MLIR Core Types -->
      <Compile Include="Core/MLIRGeneration/Dialect.fs" />
      <Compile Include="Core/MLIRGeneration/MLIRContext.fs" />
      <Compile Include="Core/MLIRGeneration/TypeSystem.fs" />
      
      <!-- Memory Layout (must come before TypeMapping) -->
      <Compile Include="Core/MemoryLayout/LayoutAnalyzer.fs" />
      
      <!-- Type Mapping (depends on LayoutAnalyzer) -->
      <Compile Include="Core/MLIRGeneration/TypeMapping.fs" />
      
      <!-- Pattern Library -->
      <Compile Include="Dabbit/Bindings/PatternLibrary.fs" />
      <Compile Include="Dabbit/Bindings/SymbolRegistry.fs" />
      <Compile Include="Dabbit/Bindings/BindingAttributes.fs" />
      
      <!-- Analysis and Transformations -->
      <Compile Include="Dabbit/Analysis/DependencyGraphBuilder.fs" />
      <Compile Include="Dabbit/Analysis/ReachabilityAnalyzer.fs" />
      <Compile Include="Dabbit/Analysis/AstPruner.fs" />
      <Compile Include="Dabbit/Transformations/ClosureElimination.fs" />
      <Compile Include="Dabbit/Transformations/StackAllocation.fs" />
      
      <!-- FCS Processing Pipeline -->
      <Compile Include="Core/FCSProcessing/TypeExtractor.fs" />
      <Compile Include="Core/FCSProcessing/DependencyResolver.fs" />
      <Compile Include="Core/FCSProcessing/ASTTransformer.fs" />
      
      <!-- Direct MLIR Generation -->
      <Compile Include="Core/MLIRGeneration/DirectGenerator.fs" />
      
      <!-- Conversion Pipeline -->
      <Compile Include="Core/Conversion/LoweringPipeline.fs" />
      <Compile Include="Core/Conversion/OptimizationPipeline.fs" />
      
      <!-- CLI -->
      <Compile Include="CLI/Configurations/ProjectConfig.fs" />
      <Compile Include="CLI/Diagnostics/EnvironmentInfo.fs" />
      <Compile Include="CLI/Diagnostics/ToolchainVerification.fs" />
      <Compile Include="CLI/Commands/CompileCommand.fs" />
      <Compile Include="CLI/Commands/VerifyCommand.fs" />
      <Compile Include="CLI/Commands/DoctorCommand.fs" />
      <Compile Include="CLI/Program.fs" />
  </ItemGroup>

  <ItemGroup>
    <!-- Core F# dependencies -->
    <PackageReference Update="FSharp.Core" Version="[9.0.300]" />

    <!-- Command line argument parsing -->
    <PackageReference Include="Argu" Version="6.1.1" />

    <PackageReference Include="FSharp.Compiler.Service" Version="43.9.300" />

    <PackageReference Include="Fantomas.Core" Version="6.2.3" />
    <PackageReference Include="Fantomas.FCS" Version="6.2.3" />

    <!-- XParsec - Critical parser combinator library -->
    <!-- NOTE: This is the heart of the Firefly architecture - NO SUBSTITUTIONS -->
    <PackageReference Include="XParsec" Version="0.1.0" />
    <PackageReference Include="Llvm.NET" Version="8.0.1" />
  </ItemGroup>

  <!-- Build Configuration -->
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <Optimize>false</Optimize>
    <DebugType>full</DebugType>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>portable</DebugType>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
  </PropertyGroup>

  <!-- Compiler Configuration -->
  <PropertyGroup>
    <LangVersion>preview</LangVersion>
    <TailCalls>true</TailCalls>
  </PropertyGroup>

  <!-- MSBuild targets for XParsec validation -->
  <Target Name="ValidateXParsecArchitecture" BeforeTargets="Build">
    <Message Text="Validating XParsec-based architecture..." Importance="normal" />
    <Message Text="âœ“ XParsec architecture validation passed" Importance="normal" />
  </Target>

  <!-- Clean intermediate files -->
  <Target Name="CleanIntermediates" AfterTargets="Clean">
    <Message Text="Cleaning intermediate files..." Importance="normal" />
  </Target>

  <!-- Package metadata -->
  <PropertyGroup>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/speakez-llc/firefly</PackageProjectUrl>
    <PackageReleaseNotes>
      Version 0.2.0-alpha:
      - Complete XParsec-based architecture implementation
      - Zero-allocation F# to native compilation
      - Comprehensive MLIR/LLVM pipeline using parser combinators
      - Eliminated all regex-based shortcuts
      - Hard failure compilation semantics (no fallbacks)
      - Type-safe configuration parsing with XParsec
      - Full Oak AST transformation pipeline
    </PackageReleaseNotes>
  </PropertyGroup>

  <!-- Analyzer configuration -->
  <PropertyGroup>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <NoWarn>$(NoWarn);FS0025;FS0040</NoWarn>
  </PropertyGroup>

</Project>








































































































